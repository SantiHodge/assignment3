// Define the BarChart class
class Barchart {
    constructor(config, data) {
        this.parentElement = config.parentElement;
        this.containerHeight = config.containerHeight;
        this.data = data;
        this.margin = { top: 20, right: 20, bottom: 30, left: 90 };
        this.width = 400 - this.margin.left - this.margin.right;
        this.height = this.containerHeight - this.margin.top - this.margin.bottom;
    }

    // Method to update the visualization
    updateVis() {
        // Filter data to get unique regions and their counts
        const regionCounts = d3.rollup(this.data, v => v.length, d => d.Region);

        // Convert regionCounts map to an array of objects
        const regionData = Array.from(regionCounts, ([region, count]) => ({ Region: region, Count: count }));

        // Sort the data by count in descending order
        regionData.sort((a, b) => b.Count - a.Count);

        // Create scales for x and y axes
        const xScale = d3.scaleLinear()
            .range([0, this.width])
            .domain([0, d3.max(regionData, d => d.Count)]);

        const yScale = d3.scaleBand()
            .range([0, this.height])
            .domain(regionData.map(d => d.Region))
            .paddingInner(0.1)
            .paddingOuter(0.2);

        // Create SVG container
        const svg = d3.select(this.parentElement)
            .append("svg")
            .attr("width", this.width + this.margin.left + this.margin.right)
            .attr("height", this.height + this.margin.top + this.margin.bottom)
            .append("g")
            .attr("transform", `translate(${this.margin.left}, ${this.margin.top})`);

        // Add bars to the chart
        svg.selectAll(".bar")
            .data(regionData)
            .enter()
            .append("rect")
            .attr("class", "bar")
            .attr("x", 0)
            .attr("y", d => yScale(d.Region))
            .attr("width", d => xScale(d.Count))
            .attr("fill", 'darkblue')
            .attr("height", yScale.bandwidth());

        // Add y axis
        svg.append("g")
            .attr("class", "y-axis")
            .call(d3.axisLeft(yScale));

        // Add x axis
        svg.append("g")
            .attr("class", "x-axis")
            .attr("transform", `translate(0, ${this.height})`)
            .call(d3.axisBottom(xScale));

        // Add x axis label
        svg.append("text")
            .attr("class", "x-axis-label")
            .attr("text-anchor", "middle")
            .attr("x", this.width / 2)
            .attr("y", this.height + this.margin.bottom)
            .text("Country Count");
    }
}

